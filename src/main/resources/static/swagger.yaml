swagger: '2.0'
info:
  description: This the InnoEdu api.
  version: 1.0.0
  title: InnoEdu Api
  contact:
    email: apiteam@inno.edu
host: inno-edu-api.herokuapp.com
basePath: /api
tags:
  - name: users
    description: User management
  - name: schools
    description: School management
  - name: mentor-profiles
    description: Mentor profiles management
  - name: mentee-profiles
    description: Mentor profiles management
  - name: availability
    description: Mentor avaialbility management
  - name: appointments
    description: Appointments management
schemes:
  - https
  - http
paths:
  /users:
    get:
      tags:
        - users
      summary: Get all users
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EmbeddedUserResourceList'
    post:
      tags:
        - users
      summary: Add a new user
      consumes:
        - application/json
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: request
          description: Request object with the user information to be created
          required: true
          schema:
            $ref: '#/definitions/CreateUserRequest'
      responses:
        '201':
          description: New user successfully created
          schema:
            $ref: '#/definitions/User'
          headers:
            Location:
              type: string
              description: Link to the new resource created
        '400':
          description: Bad request, additional info provided in the response body
          schema:
            $ref: '#/definitions/VndErrors'
  /users/{id}:
    get:
      tags:
        - users
      summary: Get user by id
      parameters:
        - in: path
          name: id
          description: User id
          required: true
          type: string
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResource'
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/VndErrors'
    put:
      tags:
        - users
      summary: Update user by id
      consumes:
        - application/json
      produces:
        - application/hal+json
      parameters:
        - in: path
          name: id
          description: User id
          required: true
          type: string
        - in: body
          name: request
          description: Request object with the user information to be updated
          required: true
          schema:
            $ref: '#/definitions/UpdateUserRequest'
      responses:
        '201':
          description: User successfully updated
          schema:
            $ref: '#/definitions/User'
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/VndErrors'
    delete:
      tags:
        - users
      summary: Delete user by id
      parameters:
        - in: path
          name: id
          description: User id
          required: true
          type: string
      responses:
        '204':
          description: User successfully removed
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/VndErrors'
  /users/{id}/approve:
    put:
      tags:
        - users
      summary: Approve the current created mentor profile by user id
      parameters:
        - in: path
          name: id
          description: User id
          required: true
          type: string
      responses:
        '204':
          description: User profile successfully approved
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/VndErrors'
        '400':
          description: User is not a mentor
          schema:
            $ref: '#/definitions/VndErrors'
  /users/{id}/reject:
    put:
      tags:
        - users
      summary: Reject the current created mentor profile by user id
      parameters:
        - in: path
          name: id
          description: User id
          required: true
          type: string
      responses:
        '204':
          description: User profile successfully rejected
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/VndErrors'
        '400':
          description: User is not a mentor
          schema:
            $ref: '#/definitions/VndErrors'
  /users/{id}/profile:
    get:
      tags:
        - users
      summary: Get mentor or mentee profile by user by id
      parameters:
        - in: path
          name: id
          description: User id
          required: true
          type: string
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/VndErrors'
        '400':
          description: Profile not found
          schema:
            $ref: '#/definitions/VndErrors'
definitions:
  VndError:
    type: object
    properties:
      logref:
        type: string
      message:
        type: string
      links:
        type: array
        items:
          type: object
  VndErrors:
    type: array
    items:
      $ref: '#/definitions/VndError'
  CreateUserRequest:
    type: object
    properties:
      firstName:
        type: string
        maximum: 50
      lastName:
        type: string
        maximum: 50
      username:
        type: string
        maximum: 30
      email:
        type: string
        maximum: 255
      password:
        type: string
        maximum: 30
      confirmPassword:
        type: string
        maximum: 30
      isMentor:
        type: boolean
    required:
      - firstName
      - lastName
      - username
      - email
      - password
      - confirmPassword
      - isMentor
  UpdateUserRequest:
    type: object
    properties:
      firstName:
        type: string
        maximum: 50
      lastName:
        type: string
        maximum: 50
      email:
        type: string
        maximum: 255
      photoUrl:
        type: string
    required:
      - firstName
      - lastName
      - email
  User:
    type: object
    properties:
      id:
        type: string
      firstName:
        type: string
        maximum: 50
      lastName:
        type: string
        maximum: 50
      username:
        type: string
        maximum: 30
      email:
        type: string
        maximum: 255
      photoUrl:
        type: string
      isMentor:
        type: boolean
    required:
      - id
      - firstName
      - lastName
      - username
      - email
      - isMentor
  UserResource:
    allOf:
        - $ref: '#/definitions/User'
        - type: object
          properties:
            _links:
              type: object
  UserResourceList:
    type: object
    properties:
      userResourceList:
        type: array
        items:
          $ref: '#/definitions/UserResource'
  EmbeddedUserResourceList:
    type: object
    properties:
      _embedded:
        $ref: '#/definitions/UserResourceList'
      _links:
        type: object