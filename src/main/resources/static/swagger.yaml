swagger: '2.0'
info:
  description: This the InnoEdu api.
  version: 1.0.0
  title: InnoEdu Api
  contact:
    email: apiteam@inno.edu
host: inno-edu-api.herokuapp.com
basePath: /api
tags:
  - name: auth
    description: Login management
  - name: users
    description: User management
  - name: schools
    description: School management
  - name: mentor-profiles
    description: Mentor profiles management
  - name: mentee-profiles
    description: Mentor profiles management
  - name: availability
    description: Mentor avaialbility management
  - name: appointments
    description: Appointments management
schemes:
  - https
  - http
paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: Sign in using the user crendentials
      consumes:
        - application/json
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: request
          description: Request object with the credentials
          required: true
          schema:
            $ref: '#/definitions/LoginRequest'
      responses:
        '201':
          description: New user successfully created
          schema:
            $ref: '#/definitions/UserResource'
          headers:
            Authorization:
              type: string
              description: Authorization token
        '401':
          description: Authentication failed
          schema:
            $ref: '#/definitions/VndErrors'
  /users:
    get:
      tags:
        - users
      summary: Get all users
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EmbeddedUserResourceList'
    post:
      tags:
        - users
      summary: Add a new user
      consumes:
        - application/json
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: request
          description: Request object with the user information to be created
          required: true
          schema:
            $ref: '#/definitions/CreateUserRequest'
      responses:
        '201':
          description: New user successfully created
          schema:
            $ref: '#/definitions/User'
          headers:
            Location:
              type: string
              description: Link to the new resource created
        '400':
          description: Bad request, additional info provided in the response body
          schema:
            $ref: '#/definitions/VndErrors'
  /users/{id}:
    get:
      tags:
        - users
      summary: Get user by id
      parameters:
        - in: path
          name: id
          description: User id
          required: true
          type: string
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResource'
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/VndErrors'
    put:
      tags:
        - users
      summary: Update user by id
      consumes:
        - application/json
      produces:
        - application/hal+json
      parameters:
        - in: path
          name: id
          description: User id
          required: true
          type: string
        - in: body
          name: request
          description: Request object with the user information to be updated
          required: true
          schema:
            $ref: '#/definitions/UpdateUserRequest'
      responses:
        '201':
          description: User successfully updated
          schema:
            $ref: '#/definitions/User'
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/VndErrors'
    delete:
      tags:
        - users
      summary: Delete user by id
      parameters:
        - in: path
          name: id
          description: User id
          required: true
          type: string
      responses:
        '204':
          description: User successfully removed
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/VndErrors'
  /users/{id}/approve:
    put:
      tags:
        - users
      summary: Approve the current created mentor profile by user id
      parameters:
        - in: path
          name: id
          description: User id
          required: true
          type: string
      responses:
        '204':
          description: User profile successfully approved
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/VndErrors'
        '400':
          description: User is not a mentor
          schema:
            $ref: '#/definitions/VndErrors'
  /users/{id}/reject:
    put:
      tags:
        - users
      summary: Reject the current created mentor profile by user id
      parameters:
        - in: path
          name: id
          description: User id
          required: true
          type: string
      responses:
        '204':
          description: User profile successfully rejected
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/VndErrors'
        '400':
          description: User is not a mentor
          schema:
            $ref: '#/definitions/VndErrors'
  /users/{id}/profile:
    get:
      tags:
        - users
      summary: Get mentor or mentee profile by user by id
      parameters:
        - in: path
          name: id
          description: User id
          required: true
          type: string
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/VndErrors'
        '400':
          description: Profile not found
          schema:
            $ref: '#/definitions/VndErrors'
  /schools:
    get:
      tags:
        - schools
      summary: Get all schools
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EmbeddedSchoolResourceList'
    post:
      tags:
        - schools
      summary: Add a new school
      consumes:
        - application/json
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: request
          description: Request object with the school information to be created
          required: true
          schema:
            $ref: '#/definitions/CreateSchoolRequest'
      responses:
        '201':
          description: New school successfully created
          schema:
            $ref: '#/definitions/School'
          headers:
            Location:
              type: string
              description: Link to the new resource created
  /schools/{id}:
    get:
      tags:
        - schools
      summary: Get school by id
      parameters:
        - in: path
          name: id
          description: School id
          required: true
          type: string
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SchoolResource'
        '404':
          description: School not found
          schema:
            $ref: '#/definitions/VndErrors'
    put:
      tags:
        - schools
      summary: Update school by id
      consumes:
        - application/json
      produces:
        - application/hal+json
      parameters:
        - in: path
          name: id
          description: School id
          required: true
          type: string
        - in: body
          name: request
          description: Request object with the school information to be updated
          required: true
          schema:
            $ref: '#/definitions/UpdateSchoolRequest'
      responses:
        '201':
          description: School successfully updated
          schema:
            $ref: '#/definitions/School'
        '404':
          description: School not found
          schema:
            $ref: '#/definitions/VndErrors'
    delete:
      tags:
        - schools
      summary: Delete school by id
      parameters:
        - in: path
          name: id
          description: School id
          required: true
          type: string
      responses:
        '204':
          description: School successfully removed
        '404':
          description: School not found
          schema:
            $ref: '#/definitions/VndErrors'
  /schools/{id}/mentors:
    get:
      tags:
        - schools
      summary: Get school mentors
      parameters:
        - in: path
          name: id
          description: School id
          required: true
          type: string
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EmbeddedMentorProfileUserResourceList'
        '404':
          description: School not found
          schema:
            $ref: '#/definitions/VndErrors'
  /mentor-profiles:
    get:
      tags:
        - mentor-profiles
      summary: Get all mentor profiles
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EmbeddedMentorProfileResourceList'
    post:
      tags:
        - mentor-profiles
      summary: Add a new mentor profile
      consumes:
        - application/json
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: request
          description: Request object with the mentor profile information to be created
          required: true
          schema:
            $ref: '#/definitions/CreateMentorProfileRequest'
      responses:
        '201':
          description: New mentor profile successfully created
          schema:
            $ref: '#/definitions/MentorProfile'
          headers:
            Location:
              type: string
              description: Link to the new resource created
        '400':
          description: Bad request, additional info provided in the response body
          schema:
            $ref: '#/definitions/VndErrors'
  /mentor-profiles/{id}:
    get:
      tags:
        - mentor-profiles
      summary: Get mentor profile by id
      parameters:
        - in: path
          name: id
          description: Mentor profile id
          required: true
          type: string
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MentorProfileResource'
        '404':
          description: Profile not found
          schema:
            $ref: '#/definitions/VndErrors'
    put:
      tags:
        - mentor-profiles
      summary: Update mentor profile by id
      consumes:
        - application/json
      produces:
        - application/hal+json
      parameters:
        - in: path
          name: id
          description: Mentor profile id
          required: true
          type: string
        - in: body
          name: request
          description: Request object with the mentor profile information to be updated
          required: true
          schema:
            $ref: '#/definitions/UpdateMentorProfileRequest'
      responses:
        '201':
          description: Mentor profile successfully updated
          schema:
            $ref: '#/definitions/MentorProfile'
        '404':
          description: Profile not found
          schema:
            $ref: '#/definitions/VndErrors'
    delete:
      tags:
        - mentor-profiles
      summary: Delete mentor profile by id
      parameters:
        - in: path
          name: id
          description: Mentor profile id
          required: true
          type: string
      responses:
        '204':
          description: Mentor profile successfully removed
        '404':
          description: Mentor profile not found
          schema:
            $ref: '#/definitions/VndErrors'
  /mentor-profiles/{id}/approve:
    put:
      tags:
        - mentor-profiles
      summary: Approve a new mentor profile. All other profiles will be inactivated
      parameters:
        - in: path
          name: id
          description: User id
          required: true
          type: string
      responses:
        '204':
          description: Mentor profile successfully approved
        '404':
          description: Profile not found
          schema:
            $ref: '#/definitions/VndErrors'
  /mentor-profiles/{id}/reject:
    put:
      tags:
        - mentor-profiles
      summary: Reject the mentor profile
      parameters:
        - in: path
          name: id
          description: Mentor profile id
          required: true
          type: string
      responses:
        '204':
          description: Mentor profile profile successfully rejected
        '404':
          description: Profile not found
          schema:
            $ref: '#/definitions/VndErrors'
  /mentee-profiles:
    get:
      tags:
        - mentee-profiles
      summary: Get all mentee profiles
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EmbeddedMenteeProfileResourceList'
    post:
      tags:
        - mentee-profiles
      summary: Add a new mentee profile
      consumes:
        - application/json
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: request
          description: Request object with the mentee profile information to be created
          required: true
          schema:
            $ref: '#/definitions/CreateMenteeProfileRequest'
      responses:
        '201':
          description: New mentee profile successfully created
          schema:
            $ref: '#/definitions/MenteeProfile'
          headers:
            Location:
              type: string
              description: Link to the new resource created
        '400':
          description: Bad request, additional info provided in the response body
          schema:
            $ref: '#/definitions/VndErrors'
  /mentee-profiles/{id}:
    get:
      tags:
        - mentee-profiles
      summary: Get mentee profile by id
      parameters:
        - in: path
          name: id
          description: Mentee profile id
          required: true
          type: string
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MenteeProfileResource'
        '404':
          description: Profile not found
          schema:
            $ref: '#/definitions/VndErrors'
    put:
      tags:
        - mentee-profiles
      summary: Update mentee profile by id
      consumes:
        - application/json
      produces:
        - application/hal+json
      parameters:
        - in: path
          name: id
          description: Mentee profile id
          required: true
          type: string
        - in: body
          name: request
          description: Request object with the mentee profile information to be updated
          required: true
          schema:
            $ref: '#/definitions/UpdateMenteeProfileRequest'
      responses:
        '201':
          description: Mentee profile successfully updated
          schema:
            $ref: '#/definitions/MenteeProfile'
        '404':
          description: Profile not found
          schema:
            $ref: '#/definitions/VndErrors'
    delete:
      tags:
        - mentee-profiles
      summary: Delete mentee profile by id
      parameters:
        - in: path
          name: id
          description: Mentee profile id
          required: true
          type: string
      responses:
        '204':
          description: Mentee profile successfully removed
        '404':
          description: Mentee profile not found
          schema:
            $ref: '#/definitions/VndErrors'
  /availability:
    get:
      tags:
        - availability
      summary: Get all availability
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EmbeddedAvailabilityResourceList'
    post:
      tags:
        - availability
      summary: Add a new availability
      consumes:
        - application/json
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: request
          description: Request object with the availability information to be created
          required: true
          schema:
            $ref: '#/definitions/CreateAvailabilityRequest'
      responses:
        '201':
          description: New availability successfully created
          schema:
            $ref: '#/definitions/Availability'
          headers:
            Location:
              type: string
              description: Link to the new resource created
  /availability/{id}:
    get:
      tags:
        - availability
      summary: Get availability by id
      parameters:
        - in: path
          name: id
          description: Availability id
          required: true
          type: string
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AvailabilityResource'
        '404':
          description: Availability not found
          schema:
            $ref: '#/definitions/VndErrors'
    put:
      tags:
        - availability
      summary: Update availability by id
      consumes:
        - application/json
      produces:
        - application/hal+json
      parameters:
        - in: path
          name: id
          description: Availability id
          required: true
          type: string
        - in: body
          name: request
          description: Request object with the availability information to be updated
          required: true
          schema:
            $ref: '#/definitions/UpdateAvailabilityRequest'
      responses:
        '201':
          description: Availability successfully updated
          schema:
            $ref: '#/definitions/Availability'
        '404':
          description: Availability not found
          schema:
            $ref: '#/definitions/VndErrors'
    delete:
      tags:
        - availability
      summary: Delete availability by id
      parameters:
        - in: path
          name: id
          description: Availability id
          required: true
          type: string
      responses:
        '204':
          description: Availability successfully removed
        '404':
          description: Availability not found
          schema:
            $ref: '#/definitions/VndErrors'
  /availability/mentor/{mentorId}:
    get:
      tags:
        - availability
      summary: Get availability for a mentor
      parameters:
        - in: path
          name: mentorId
          description: Mentor id
          required: true
          type: string
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EmbeddedAvailabilityResourceList'
    post:
      tags:
        - availability
      summary: Create availability for the mentor
      consumes:
        - application/json
      produces:
        - application/hal+json
      parameters:
        - in: path
          name: mentorId
          description: Mentor id
          required: true
          type: string
        - in: body
          name: request
          description: Request object with the availability information to be created
          required: true
          schema:
            $ref: '#/definitions/CreateAvailabilityByMentorIdRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Availability'
        '404':
          description: Mentor not found
          schema:
            $ref: '#/definitions/VndErrors'
  /appointments:
    get:
      tags:
        - appointments
      summary: Get all appointments
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EmbeddedAppointmentResourceList'
    post:
      tags:
        - appointments
      summary: Add a new appointment
      consumes:
        - application/json
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: request
          description: Request object with the appointment information to be created
          required: true
          schema:
            $ref: '#/definitions/CreateAppointmentRequest'
      responses:
        '201':
          description: New appointment successfully created
          schema:
            $ref: '#/definitions/Appointment'
          headers:
            Location:
              type: string
              description: Link to the new resource created
        '404':
          description: Invalid Mentor Profile or Mentee Profile supplied
          schema:
            $ref: '#/definitions/VndErrors'
  /appointments/{id}:
    get:
      tags:
        - appointments
      summary: Get appointment by id
      parameters:
        - in: path
          name: id
          description: Appointment id
          required: true
          type: string
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AppointmentResource'
        '404':
          description: Appointment not found
          schema:
            $ref: '#/definitions/VndErrors'
    put:
      tags:
        - appointments
      summary: Update appointment by id
      consumes:
        - application/json
      produces:
        - application/hal+json
      parameters:
        - in: path
          name: id
          description: Appointment id
          required: true
          type: string
        - in: body
          name: request
          description: Request object with the appointment information to be updated
          required: true
          schema:
            $ref: '#/definitions/UpdateAppointmentRequest'
      responses:
        '201':
          description: Appointment successfully updated
          schema:
            $ref: '#/definitions/Appointment'
        '404':
          description: Appointment not found
          schema:
            $ref: '#/definitions/VndErrors'
    delete:
      tags:
        - appointments
      summary: Delete appointment by id
      parameters:
        - in: path
          name: id
          description: Appointment id
          required: true
          type: string
      responses:
        '204':
          description: Appointment successfully removed
        '404':
          description: Appointment not found
          schema:
            $ref: '#/definitions/VndErrors'
  /appointments/mentor/{mentorId}:
    get:
      tags:
        - appointments
      summary: Get all appointments by mentor and status
      produces:
        - application/hal+json
      parameters:
        - in: path
          name: mentorId
          description: Mentor id
          required: true
          type: string
        - in: query
          name: status
          description: Appointment status
          required: false
          type: string
          enum: [PROPOSED, ACCEPTED, DECLINED, CANCELED]
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EmbeddedAppointmentResourceList'
        '404':
          description: Mentor not found
          schema:
            $ref: '#/definitions/VndErrors'
  /appointments/mentee/{menteeId}:
    get:
      tags:
        - appointments
      summary: Get all appointments by mentee and status
      produces:
        - application/hal+json
      parameters:
        - in: path
          name: menteeId
          description: Mentee id
          required: true
          type: string
        - in: query
          name: status
          description: Appointment status
          required: false
          type: string
          enum: [PROPOSED, ACCEPTED, DECLINED, CANCELED]
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EmbeddedAppointmentResourceList'
        '404':
          description: Mentor not found
          schema:
            $ref: '#/definitions/VndErrors'
  /appointments/{id}/cancel:
    put:
      tags:
        - appointments
      summary: Cancel appointment by id
      consumes:
        - application/json
      parameters:
        - in: path
          name: id
          description: Appointment id
          required: true
          type: string
        - in: body
          name: reason
          description: Reason for canceling the appointment
          required: true
          schema:
            $ref: '#/definitions/AppointmentReason'
      responses:
        '204':
          description: Appointment canceled
        '404':
          description: Appointment not found
          schema:
            $ref: '#/definitions/VndErrors'
        '400':
          description: Reason not provided
          schema:
            $ref: '#/definitions/VndErrors'
  /appointments/{id}/decline:
    put:
      tags:
        - appointments
      summary: Decline appointment by id
      consumes:
        - application/json
      parameters:
        - in: path
          name: id
          description: Appointment id
          required: true
          type: string
        - in: body
          name: reason
          description: Reason for declining the appointment
          required: true
          schema:
            $ref: '#/definitions/AppointmentReason'
      responses:
        '204':
          description: Appointment declined
        '404':
          description: Appointment not found
          schema:
            $ref: '#/definitions/VndErrors'
        '400':
          description: Reason not provided
          schema:
            $ref: '#/definitions/VndErrors'
  /appointments/{id}/accept:
    put:
      tags:
        - appointments
      summary: Accept appointment by id
      consumes:
        - application/json
      parameters:
        - in: path
          name: id
          description: Appointment id
          required: true
          type: string
      responses:
        '204':
          description: Appointment accepted
        '404':
          description: Appointment not found
          schema:
            $ref: '#/definitions/VndErrors'
definitions:
  VndError:
    type: object
    properties:
      logref:
        type: string
      message:
        type: string
      links:
        type: array
        items:
          type: object
  VndErrors:
    type: array
    items:
      $ref: '#/definitions/VndError'
  LoginRequest:
    type: object
    properties:
      username:
        type: string
        maxLength: 30
      password:
        type: string
        maxLength: 30
    required:
      - username
      - password
  CreateUserRequest:
    type: object
    properties:
      firstName:
        type: string
        maxLength: 50
      lastName:
        type: string
        maxLength: 50
      username:
        type: string
        maxLength: 30
      email:
        type: string
        maxLength: 255
      password:
        type: string
        maxLength: 30
      confirmPassword:
        type: string
        maxLength: 30
      isMentor:
        type: boolean
    required:
      - firstName
      - lastName
      - username
      - email
      - password
      - confirmPassword
      - isMentor
  UpdateUserRequest:
    type: object
    properties:
      firstName:
        type: string
        maxLength: 50
      lastName:
        type: string
        maxLength: 50
      email:
        type: string
        maxLength: 255
      photoUrl:
        type: string
    required:
      - firstName
      - lastName
      - email
  User:
    type: object
    properties:
      id:
        type: string
      firstName:
        type: string
        maxLength: 50
      lastName:
        type: string
        maxLength: 50
      username:
        type: string
        maxLength: 30
      email:
        type: string
        maxLength: 255
      photoUrl:
        type: string
      isMentor:
        type: boolean
  UserResource:
    allOf:
        - $ref: '#/definitions/User'
        - type: object
          properties:
            _links:
              type: object
  UserResourceList:
    type: object
    properties:
      userResourceList:
        type: array
        items:
          $ref: '#/definitions/UserResource'
  EmbeddedUserResourceList:
    type: object
    properties:
      _embedded:
        $ref: '#/definitions/UserResourceList'
      _links:
        type: object
  CreateSchoolRequest:
    type: object
    properties:
      name:
        type: string
        maxLength: 255
      description:
        type: string
      photoUrl:
        type: string
        maxLength: 255
    required:
      - name
      - description
      - photoUrl
  UpdateSchoolRequest:
    type: object
    properties:
      name:
        type: string
        maxLength: 255
      description:
        type: string
      photoUrl:
        type: string
        maxLength: 255
    required:
      - name
      - description
      - photoUrl
  School:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
        maxLength: 255
      description:
        type: string
      photoUrl:
        type: string
        maxLength: 255
  SchoolResource:
    allOf:
        - $ref: '#/definitions/School'
        - type: object
          properties:
            _links:
              type: object
  SchoolResourceList:
    type: object
    properties:
      schoolResourceList:
        type: array
        items:
          $ref: '#/definitions/SchoolResource'
  EmbeddedSchoolResourceList:
    type: object
    properties:
      _embedded:
        $ref: '#/definitions/SchoolResourceList'
      _links:
        type: object
  MentorProfileUser:
    type: object
    properties:
      id:
        type: string
      mentorId:
        type: string
      schoolId:
        type: string
      email:
        type: string
      description:
        type: string
      firstName:
        type: string
      secondName:
        type: string
  MentorProfileUserResource:
    allOf:
        - $ref: '#/definitions/MentorProfileUser'
        - type: object
          properties:
            _links:
              type: object
  MentorProfileUserResourceList:
    type: object
    properties:
      mentorProfileUserResourceList:
        type: array
        items:
          $ref: '#/definitions/MentorProfileUserResource'
  EmbeddedMentorProfileUserResourceList:
    type: object
    properties:
      _embedded:
        $ref: '#/definitions/MentorProfileUserResourceList'
      _links:
        type: object
  CreateMentorProfileRequest:
    type: object
    properties:
      mentorId:
        type: string
      schoolId:
        type: string
      email:
        type: string
        maxLength: 255
      description:
        type: string
    required:
      - mentorId
      - schoolId
      - email
      - description
  UpdateMentorProfileRequest:
    type: object
    properties:
      description:
        type: string
    required:
      - description
  MentorProfile:
    type: object
    properties:
      id:
        type: string
      mentorId:
        type: string
      schoolId:
        type: string
      email:
        type: string
        maxLength: 255
      description:
        type: string
      status:
        type: string
        enum: [CREATED, ACTIVE, INACTIVE, REJECTED]
  MentorProfileResource:
    allOf:
        - $ref: '#/definitions/MentorProfile'
        - type: object
          properties:
            _links:
              type: object
  MentorProfileResourceList:
    type: object
    properties:
      mentorProfileResourceList:
        type: array
        items:
          $ref: '#/definitions/MentorProfileResource'
  EmbeddedMentorProfileResourceList:
    type: object
    properties:
      _embedded:
        $ref: '#/definitions/MentorProfileResourceList'
      _links:
        type: object
  CreateMenteeProfileRequest:
    type: object
    properties:
      menteeId:
        type: string
      description:
        type: string
    required:
      - menteeId
      - description
  UpdateMenteeProfileRequest:
    type: object
    properties:
      description:
        type: string
    required:
      - description
  MenteeProfile:
    type: object
    properties:
      id:
        type: string
      menteeId:
        type: string
      description:
        type: string
  MenteeProfileResource:
    allOf:
        - $ref: '#/definitions/MenteeProfile'
        - type: object
          properties:
            _links:
              type: object
  MenteeProfileResourceList:
    type: object
    properties:
      menteeProfileResourceList:
        type: array
        items:
          $ref: '#/definitions/MenteeProfileResource'
  EmbeddedMenteeProfileResourceList:
    type: object
    properties:
      _embedded:
        $ref: '#/definitions/MenteeProfileResourceList'
      _links:
        type: object
  CreateAvailabilityRequest:
    type: object
    properties:
      mentorProfileId:
        type: string
      fromDateTime:
        type: string
        format: date-time
      toDateTime:
        type: string
        format: date-time
    required:
      - mentorProfileId
      - fromDateTime
      - toDateTime
  CreateAvailabilityByMentorIdRequest:
    type: object
    properties:
      fromDateTime:
        type: string
        format: date-time
      toDateTime:
        type: string
        format: date-time
    required:
      - fromDateTime
      - toDateTime
  UpdateAvailabilityRequest:
    type: object
    properties:
      fromDateTime:
        type: string
        format: date-time
      toDateTime:
        type: string
        format: date-time
    required:
      - fromDateTime
      - toDateTime
  Availability:
    type: object
    properties:
      id:
        type: string
      mentorProfileId:
        type: string
      fromDateTime:
        type: string
        format: date-time
      toDateTime:
        type: string
        format: date-time
  AvailabilityResource:
    allOf:
        - $ref: '#/definitions/Availability'
        - type: object
          properties:
            _links:
              type: object
  AvailabilityResourceList:
    type: object
    properties:
      availabilityResourceList:
        type: array
        items:
          $ref: '#/definitions/AvailabilityResource'
  EmbeddedAvailabilityResourceList:
    type: object
    properties:
      _embedded:
        $ref: '#/definitions/AvailabilityResourceList'
      _links:
        type: object
  CreateAppointmentRequest:
    type: object
    properties:
      mentorProfileId:
        type: string
      menteeProfileId:
        type: string
      fromDateTime:
        type: string
        format: date-time
      toDateTime:
        type: string
        format: date-time
      description:
        type: string
    required:
      - mentorProfileId
      - menteeProfileId
      - fromDateTime
      - toDateTime
      - description
  UpdateAppointmentRequest:
    type: object
    properties:
      fromDateTime:
        type: string
        format: date-time
      toDateTime:
        type: string
        format: date-time
      description:
        type: string
    required:
      - fromDateTime
      - toDateTime
      - description
  Appointment:
    type: object
    properties:
      id:
        type: string
      mentorProfileId:
        type: string
      menteeProfileId:
        type: string
      fromDateTime:
        type: string
        format: date-time
      toDateTime:
        type: string
        format: date-time
      description:
        type: string
      status:
        type: string
        enum: [PROPOSED, ACCEPTED, DECLINED, CANCELED]
      reason:
        type: string
  AppointmentReason:
    type: object
    properties:
      reason:
        type: string
        maxLength: 255
  AppointmentResource:
    allOf:
        - $ref: '#/definitions/Appointment'
        - type: object
          properties:
            _links:
              type: object
  AppointmentResourceList:
    type: object
    properties:
      appointmentResourceList:
        type: array
        items:
          $ref: '#/definitions/AppointmentResource'
  EmbeddedAppointmentResourceList:
    type: object
    properties:
      _embedded:
        $ref: '#/definitions/AppointmentResourceList'
      _links:
        type: object
